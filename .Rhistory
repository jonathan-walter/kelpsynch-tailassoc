par(mar=c(4.1,4.1,3.1,2.1))
barplot(table(dat$Q10)/ntotal, col=pal2, ylab="Proportion of responses"
, las=2)
barplot(table(dat$Q10)[2:1]/ntotal, col=pal, ylab="Proportion of responses"
, las=2)
mtext("Have you ever shopped for an EV")
mtext("Have you ever shopped for an EV?",line=1)
par(mar=c(4.1,4.1,3.1,2.1))
barplot(table(dat$Q10)[2:1]/ntotal, col=pal, ylab="Proportion of responses"
, las=2)
mtext("Have you ever shopped for an EV?",line=1)
barplot(table(dat$Q11)/ntotal, col=pal, ylab="Proportion of responses"
, las=2)
par(mar=c(8,4.1,3.1,2.1))
barplot(table(dat$Q11)/ntotal, col=pal, ylab="Proportion of responses"
, las=2)
par(mar=c(0,4.1,3.1,2.1))
par(mar=c(9,4.1,3.1,2.1))
barplot(table(dat$Q11)/ntotal, col=pal, ylab="Proportion of responses"
, las=2)
barplot(table(dat$Q11)[c(3,2,1,4)]/ntotal, col=pal, ylab="Proportion of responses"
, las=2)
barplot(table(dat$Q11)[c(3,2,1,4)]/ntotal, col=pal2, ylab="Proportion of responses"
, las=2)
barplot(table(dat$Q11)[c(3,2,1,4)]/ntotal, col=brewer.pal(4,"Spectral"), ylab="Proportion of responses"
, las=2)
View(dat)
barplot(table(dat$Q11)[c(3,2,1,4)]/sum(!is.na(dat$Q10)), col=brewer.pal(4,"Spectral"), ylab="Proportion of responses"
, las=2)
par(mar=c(9,4.1,3.1,2.1))
barplot(table(dat$Q11)[c(3,2,1,4)]/sum(!is.na(dat$Q10)), col=brewer.pal(4,"Spectral"), ylab="Proportion of responses"
, las=2)
barplot(table(dat$Q11)[c(3,2,1,4)]/sum(!is.na(dat$Q11)), col=brewer.pal(4,"Spectral"), ylab="Proportion of responses"
, las=2)
mtext("Have you ever shopped for an EV?",line=1)
help("pdf")
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
table(dat$dmaDataDMA_NAME)
table(dat$S1)/ntotal
table(dat$S2)/ntotal
table(dat$D3)[c(6,2,5,1,3,4)]/ntotal
table(dat$D6)[c(7,4,5,6,1,2,3)]/ntotal
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
table(dat$Q1)[2:1]/ntotal
table(dat$Q2)[c(3,2,4,1)]
table(dat$Q2)[c(3,2,4,1)]/ntotal
table(dat$Q3)[c(4,2,1,3,5)]/ntotal
table(dat$Q4)[c(2,3,1,4,5)]/ntotal
table(dat$Q5_2)[c(1,4,3,5,2)]/ntotal
table(dat$Q5_3)[c(1,4,3,5,2)]/ntotal
table(dat$Q5_4)[c(1,4,3,5,2)]/ntotal
table(dat$Q5_5)[c(1,4,3,5,2)]/ntotal
table(dat$Q5_6)[c(1,4,3,5,2)]/ntotal
table(dat$Q5_7)[c(1,4,3,5,2)]/ntotal
table(dat$Q5_8)[c(1,4,3,5,2)]/ntotal
table(dat$Q5_9)[c(1,4,3,5,2)]/ntotal
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
table(dat$Q6)[c(3,2,1,5,4)]/ntotal
table(dat$Q7)[c(2,3,1,4,5)]/ntotal
table(dat$Q10)[2:1]/ntotal
table(dat$Q11)[c(3,2,1,4)]/sum(!is.na(dat$Q11))
table(dat$dmaDataDMA_NAME)
dat.dc<-dat[dat$dmaDataDMA_NAME == "WASHINGTON, DC (HAGRSTWN)",]
table(dat.dc$Q6)[c(3,2,1,5,4)]/nrow(dat.dc)
table(dat.dc$Q7)[c(2,3,1,4,5)]/nrow(dat.dc)
dat.tw<-dat[dat$dmaDataDMA_NAME == "NORFOLK-PORTSMTH-NEWPT NWS",]
dat.tw$Q6)[c(3,2,1,5,4)]/nrow(dat.tw)
table(dat.tw$Q6)[c(3,2,1,5,4)]/nrow(dat.tw)
table(dat.tw$Q7)[c(2,3,1,4,5)]/nrow(dat.tw)
dat.rva<-dat[dat$dmaDataDMA_NAME == "RICHMOND-PETERSBURG",]
dat.rva$Q6)[c(3,2,1,5,4)]/nrow(dat.rva)
table(dat.rva$Q6)[c(3,2,1,5,4)]/nrow(dat.rva)
table(dat.rva$Q7)[c(2,3,1,4,5)]/nrow(dat.rva)
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
source('~/Box Sync/Athenys/Gen180/EVSurvey2020/SurveyAnalysis_20200922.R')
table(dat.dc$Q4)[c(2,3,1,4,5)]/nrow(dat.dc)
table(dat.tw$Q4)[c(2,3,1,4,5)]/nrow(dat.tw)
table(dat.rva$Q4)[c(2,3,1,4,5)]/nrow(dat.rva)
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch.R')
library(deSolve)
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch.R')
mooreSinglePatch<-function(time, init, params){
#params are r1, f1k, a1, g1k, r2, f2k, a2, g2k, theta
dN1<-N1*(r1 + (1/(gamma(f1k)*theta^f1k)*N2^(f1k-1)*exp(-N1/theta)))*
(1-(a1*N1)/(r1+a1*(1/(gamma(g1k)*theta^g1k)*N2^(g1k-1)*exp(-N2/theta))))
dN2<-N2*(r2 + (1/(gamma(f2k)*theta^f2k)*N1^(f2k-1)*exp(-N1/theta)))*
(1-(a2*N2)/(r2+a1*(1/(gamma(g1k)*theta^g1k)*N2^(g1k-1)*exp(-N2/theta))))
}
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch.R')
matplot(out1)
out1 <- data.frame(out1[,c("N1","N2")])
matplot(out1)
matplot(out1, type="l")
matplot(out1)
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch.R')
as.list(parameters)
as.list(parameters)$r1
params["r1"]
parameters["r1"]
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_continuous.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_discrete.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_discrete.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_discrete.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_discrete.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_continuous.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_continuous.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_discrete.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_discrete.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_continuous.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_discrete.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_twoPatch_discrete.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_twoPatch_discrete.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_twoPatch_discrete.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_twoPatch_discrete.R')
library(mvtnorm)
help("rmvnorm")
covmat<-matrix(rho,2,2)
rho=0.5
covmat<-matrix(rho,2,2)
diag(covmat)<-1
noise<-rmvnorm(tmax, sigma=covmat)
noise
cor(noise)
source('~/Box Sync/MutualismSynchrony/Moore_etal_twoPatch_discrete.R')
cor(out1)
source('~/Box Sync/MutualismSynchrony/Moore_etal_twoPatch_discrete.R')
cor(out1[,-c(1:20),])
cor(out1[-c(1:20),])
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_continuous.R')
gamma(0)
gamma(1)
gamma(0.1)
gamma(2)
gamma(3)
gamma(4)
gamma(10)
exp(0)
exp(-Inf)
-1/0
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_continuous.R')
View(out1)
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_continuous.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_continuous.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_continuous.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_continuous.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_continuous.R')
source('~/Box Sync/MutualismSynchrony/Moore_etal_singlePatch_continuous.R')
source('~/Box Sync/ForestComplexity/PowerLawScaling/power_law_test_20201111.R')
str(dat)
canht.mean<-aggregate(can_max_ht~plotID, data=dat, FUN="mean", na.rm=T)
canht.sd<-aggregate(can_max_ht~plotID, data=dat, FUN="sd", na.rm=T)
canht.mn<-aggregate(can_max_ht~plotID, data=dat, FUN="mean", na.rm=T)
canht.sd<-aggregate(can_max_ht~plotID, data=dat, FUN="sd", na.rm=T)
tpl.dat<-left_join(pft.agg, canht.mn)
tpl.dat<-left_join(tpl.dat, canht.sd)
canht.mn<-aggregate(can_max_ht~plotID, data=dat, FUN="mean", na.rm=T)
canht.sd<-aggregate(can_max_ht~plotID, data=dat, FUN="sd", na.rm=T)
tpl.dat<-left_join(pft.agg, canht.mn)
tpl.dat<-left_join(tpl.dat, canht.sd, by=c("plotID"="plotID"))
tpl.dat
str(canht.sd)
colnames(canht.sd)<-c("plotID","sd_max_can_ht")
tpl.dat<-left_join(pft.agg, canht.mn)
tpl.dat<-left_join(tpl.dat, canht.sd, by=c("plotID"="plotID"))
tpl.dat
tpl.dat<-tpl.dat[complete.cases(tpl.dat),]
View(tpl.dat)
table(tpl.dat$pft)
tpl.dat$can_max_ht<-log(tpl.dat$can_max_ht)
tpl.dat$sd_max_can_ht<-log(tpl.dat$sd_max_can_ht)
lm(sd_max_can_ht~can_max_ht, data=tpl.dat)
lm(sd_max_can_ht~can_max_ht, data=tpl.dat)
canht.mn<-aggregate(can_max_ht~plotID, data=dat, FUN="mean", na.rm=T)
canht.sd<-aggregate(can_max_ht~plotID, data=dat, FUN="sd", na.rm=T)
colnames(canht.sd)<-c("plotID","sd_max_can_ht")
tpl.dat<-left_join(pft.agg, canht.mn)
tpl.dat<-left_join(tpl.dat, canht.sd, by=c("plotID"="plotID"))
tpl.dat<-tpl.dat[complete.cases(tpl.dat),]
table(tpl.dat$pft)
tpl.dat$can_max_ht<-log(tpl.dat$can_max_ht)
tpl.dat$sd_max_can_ht<-log(tpl.dat$sd_max_can_ht)
lm(sd_max_can_ht~can_max_ht, data=tpl.dat)
View(tpl.dat)
canht.mn<-aggregate(can_max_ht~plotID, data=dat, FUN="mean", na.rm=T)
canht.sd<-aggregate(can_max_ht~plotID, data=dat, FUN="sd", na.rm=T)
colnames(canht.sd)<-c("plotID","sd_max_can_ht")
tpl.dat<-left_join(pft.agg, canht.mn)
tpl.dat<-left_join(tpl.dat, canht.sd, by=c("plotID"="plotID"))
tpl.dat<-tpl.dat[complete.cases(tpl.dat),]
View(tpl.dat)
tpl.dat<-tpl.dat[tpl.dat$sd_max_can_ht!=0,]
table(tpl.dat$pft)
tpl.dat$can_max_ht<-log(tpl.dat$can_max_ht)
tpl.dat$sd_max_can_ht<-log(tpl.dat$sd_max_can_ht)
lm(sd_max_can_ht~can_max_ht, data=tpl.dat)
lm.tpl<-lm(sd_max_can_ht~can_max_ht, data=tpl.dat)
qm.tpl<-lm(sd_max_can_ht~can_max_ht + I(can_max_ht^2), data=tpl.dat)
anova(lm.tpl, qm.tpl)
res.tpl<-abs(residuals(lm.tpl))
rm.tpl<-lm(res.tpl~tpl.dat$can_max_ht)
summary(rm.tpl)
summary(lm.tpl)
source('~/Box Sync/MutualismSynchrony/synch_model_exploration_20210101.R')
source('~/Box Sync/MutualismSynchrony/synch_model_exploration_20210101.R')
install.packages(mvtnorm)
install.packages("mvtnorm")
source('~/Box Sync/MutualismSynchrony/synch_model_exploration_20210101.R')
View(mooreTwoPatch)
library(devtools)
install.packages("devtools")
library(devtools)
T_t = seq(5,35,5)
lower.thresh = 4
psi = 0.0191
rho = 0.1455
deltaT = 6.350
Tm = 33.993
T2_t = T_t - lower.thresh
dev = 0
for(tt in 1:length(T_t)){
tau = Tm - T2_t[tt]/deltaT
rate = psi*(exp(rho*T2_t[tt]) - exp(rho*Tm-tau))
dev = dev + rate
if(dev>=1){break}
}
dev
psi*(exp(rho*T2_t[tt]) - exp(rho*Tm-tau))
Tm - T2_t[tt]/deltaT
T2_t = T_t - lower.thresh
tau = Tm - T2_t[tt]/deltaT
rate = psi*(exp(rho*T2_t[tt]) - exp(rho*Tm-tau))
dev = dev + rate
tau
rate = psi*(exp(rho*T2_t[tt]) - exp(rho*Tm-tau))
lower.thresh = 4
psi = 0.0191
rho = 0.1455
deltaT = 6.350
Tm = 33.993
T2_t = T_t - lower.thresh
dev = 0
for(tt in 1:length(T_t)){
tau = (Tm - T2_t[tt])/deltaT
rate = psi*(exp(rho*T2_t[tt]) - exp(rho*Tm-tau))
dev = dev + rate
if(dev>=1){break}
}
lower.thresh = 0
psi = 0.0191
rho = 0.1455
deltaT = 6.350
Tm = 33.993
T2_t = T_t - lower.thresh
dev = 0
for(tt in 1:length(T_t)){
tau = (Tm - T2_t[tt])/deltaT
rate = psi*(exp(rho*T2_t[tt]) - exp(rho*Tm-tau))
dev = dev + rate
if(dev>=1){break}
}
lower.thresh = 4
psi = 0.0191
rho = 0.1455
deltaT = 6.350
Tm = 33.993
T2_t = T_t - lower.thresh
dev = 0
for(tt in 1:length(T_t)){
tau = (Tm - T2_t[tt])/deltaT
rate = psi*(exp(rho*T2_t[tt]) - exp(rho*Tm-tau))
dev = dev + rate
if(dev>=1){break}
}
T_t = rep(5,5)
lower.thresh = 4
psi = 0.0191
rho = 0.1455
deltaT = 6.350
Tm = 33.993
T2_t = T_t - lower.thresh
dev = 0
for(tt in 1:length(T_t)){
tau = (Tm - T2_t[tt])/deltaT
rate = psi*(exp(rho*T2_t[tt]) - exp(rho*Tm-tau))
dev = dev + rate
if(dev>=1){break}
}
T_t = rep(10,5)
lower.thresh = 4
psi = 0.0191
rho = 0.1455
deltaT = 6.350
Tm = 33.993
T2_t = T_t - lower.thresh
dev = 0
for(tt in 1:length(T_t)){
tau = (Tm - T2_t[tt])/deltaT
rate = psi*(exp(rho*T2_t[tt]) - exp(rho*Tm-tau))
dev = dev + rate
if(dev>=1){break}
}
T_t = rep(15,5)
lower.thresh = 4
psi = 0.0191
rho = 0.1455
deltaT = 6.350
Tm = 33.993
T2_t = T_t - lower.thresh
dev = 0
for(tt in 1:length(T_t)){
tau = (Tm - T2_t[tt])/deltaT
rate = psi*(exp(rho*T2_t[tt]) - exp(rho*Tm-tau))
dev = dev + rate
if(dev>=1){break}
}
T_t = rep(30,5)
lower.thresh = 4
psi = 0.0191
rho = 0.1455
deltaT = 6.350
Tm = 33.993
T2_t = T_t - lower.thresh
dev = 0
for(tt in 1:length(T_t)){
tau = (Tm - T2_t[tt])/deltaT
rate = psi*(exp(rho*T2_t[tt]) - exp(rho*Tm-tau))
dev = dev + rate
if(dev>=1){break}
}
T_t = rep(35,5)
lower.thresh = 4
psi = 0.0191
rho = 0.1455
deltaT = 6.350
Tm = 33.993
T2_t = T_t - lower.thresh
dev = 0
for(tt in 1:length(T_t)){
tau = (Tm - T2_t[tt])/deltaT
rate = psi*(exp(rho*T2_t[tt]) - exp(rho*Tm-tau))
dev = dev + rate
if(dev>=1){break}
}
T_t = rep(37,5)
lower.thresh = 4
psi = 0.0191
rho = 0.1455
deltaT = 6.350
Tm = 33.993
T2_t = T_t - lower.thresh
dev = 0
for(tt in 1:length(T_t)){
tau = (Tm - T2_t[tt])/deltaT
rate = psi*(exp(rho*T2_t[tt]) - exp(rho*Tm-tau))
dev = dev + rate
if(dev>=1){break}
}
T_t = rep(38,5)
lower.thresh = 4
psi = 0.0191
rho = 0.1455
deltaT = 6.350
Tm = 33.993
T2_t = T_t - lower.thresh
dev = 0
for(tt in 1:length(T_t)){
tau = (Tm - T2_t[tt])/deltaT
rate = psi*(exp(rho*T2_t[tt]) - exp(rho*Tm-tau))
dev = dev + rate
if(dev>=1){break}
}
install.packages("betapart")
library(betapart)
data("ceram.n")
data("ceram.s")
ceram.n.core<-betapart.core(ceram.n)
View(ceram.n.core)
beta.multi(ceram.n.core)
beta.pair(ceram.n.core)
beta.pair(ceram.n.core, index.family = "jaccard")
beta.temp(ceram.n.core)
help(beta.temp)
source('~/Box Sync/Grayson Lab - Box/Gypsy Moth/Jeffress Spread Forecasting/ClimateSuitabilitySynthesis/buildSuitabilityMaps.R')
library(here)
library(rgdal)
library(raster)
library(sp)
library(rgeos)
library(sf)
library(lmerTest)
library(car)
setwd(here())
states<-readOGR(here("./Data/Raw/statesp020.shp"))
install.pacak
install.packages("here")
install.packages("rgdal")
install.packages("raster")
install.packages("sp")
install.packages("rgeos")
install.packages("sf")
install.packages("lmerTest")
install.packages("car")
source('~/Box Sync/Grayson Lab - Box/Gypsy Moth/Jeffress Spread Forecasting/ClimateSuitabilitySynthesis/buildSuitabilityMaps.R')
states<-readOGR(here("./Data/Raw/statesp020.shp"))
setwd(here())
here()
x<-matrix(rnorm(20,1,1), 4,5)
sum(x)
colSums(rowSums(x))
sum(colSums(x))
sum(rowSums(x))
mean(colMeans(x))
mean(rowMeans(x))
mean(X)
mean(x)
source('~/Box Sync/Grayson Lab - Box/Gypsy Moth/NSF Macrosystems 2018-2019/Climate Simulation Summer 2019/Manuscript files/fig1_map_treatments.R')
library(devtools)
install_github("jonathan-walter/disturbhf")
source('~/Box Sync/Grayson Lab - Box/Gypsy Moth/NSF Macrosystems 2018-2019/Climate Simulation Summer 2019/Manuscript files/fig1_map_treatments.R')
install.packages("viridis")
source('~/Box Sync/Grayson Lab - Box/Gypsy Moth/NSF Macrosystems 2018-2019/Climate Simulation Summer 2019/Manuscript files/fig1_map_treatments.R')
source('~/Box Sync/Grayson Lab - Box/Gypsy Moth/NSF Macrosystems 2018-2019/Climate Simulation Summer 2019/Manuscript files/fig1_map_treatments.R')
help(glm)
library(raster)
p1 <- raster("/Users/jonmacbook/Box Sync/Grayson Lab - Box/Gypsy Moth/Jeffress Spread Forecasting/Data/Reduced/forest_canopy_5km.tif")
p2 <- raster("/Users/jonmacbook/Box Sync/Grayson Lab - Box/Gypsy Moth/Jeffress Spread Forecasting/Data/Reduced/gridtraps_5km_2017.tif")
extent(p1)
extent(p2)
crs(p1)
crs(p2)
p3 <- raster("/Users/jonmacbook/Box Sync/Grayson Lab - Box/Gypsy Moth/Jeffress Spread Forecasting/Data/Reduced/forest_canopy.tif")
extent(p3)
100*1000
100*1000/30
help(raster)
### Source Strength attempt. Final should be in raster format so it can be exported into omniscape.jl
rm(list=ls())#clears the global environment
library(here)
library(rgdal)
library(raster)
library(sp)
library(rgeos)
start.time <- Sys.time()
## Load our inputs
forcanopy <- raster(here("./Data/Reduced/forest_canopy.tif"))
### read the grid polys shapefile and convert into a spatial vector object. Name this "forest.grid"
forest.grid <- readOGR(here("./Data/Reduced/gridPolys.shp"))
source('~/.active-rstudio-document')
jrg<-dt1[dt1$site=="jrg",]
unique(jrg$habitat)
source('~/.active-rstudio-document')
unique(jrg$habitat)
source('~/.active-rstudio-document')
jrg<-dt1[dt1$site=="jrg",]
unique(jrg$habitat)
str(jrg)
unique(jrg$project)
cdr<-dt1[dt1$site=="cdr",]
unique(cdr$habitat)
unique(cdr$project)
library(wsyn)
install.packages("wsyn")
help("wmf")
??wmf
library(wsyb)
library(wsyn)
help(wmp)
help("wmf")
help("wpmf")
source('~/GitHub/kelpsynch-tailassoc/code/kelp_tail_association_newdatacleaning.R')
install.packages("ncf")
library(ncf)
library(ecodist)
install.packages("ecodist")
library(ecodist)
library(RColorBrewer)
library(nlme)
library(fields)
library(copula)
install.packages("copula")
library(copula)
library(mvtnorm)
library(matrixcalc)
install.packages("natrixcalc")
library(Matrix)
library(grDevices)
library(rgdal)
setwd("~/GitHub/kelpsynch-tailassoc")
source('~/GitHub/kelpsynch-tailassoc/code/kelp_tail_association_newdatacleaning.R')
